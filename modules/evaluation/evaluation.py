"""Module to Evaluate T-Vecs model against Human Semantic Similarity Score"""

import os
import codecs
from scipy.stats import pearsonr

def get_correlation_coefficient(score_data_path):
    """
        Measures correlation using Pearson's Coefficient.
        The correlation is between the T-Vecs Model and Human Semantic Similarity Score.

        Function Parameters:
        * score_data_path - (string) - File generated by preprocessor/yandex.py

        Return
        * correlation_coefficient - (float) - Measure of degree of relatedness between two variables 
        * p-value                 - (float) - The null hypothesis is that the two variables are uncorrelated. 
                                              The p-value is a number between zero and one that represents 
                                              the probability that your data would have arisen
                                              if the null hypothesis were true.
    """
    with codecs.open(score_data_path, 'r', encoding='utf-8') as file:
        human_score, calculated_score = zip(*[
            (float(sentence.split(' ')[2]), float(sentence.split(' ')[3])) 
            for sentence in file.read().split('\n')
        ])
        return pearsonr(human_score, calculated_score)

if __name__ == '__main__':
    print "Evaluation of T-Vecs Model against Human Semantic Similarity Score:"
    correlation_score, pvalue = get_correlation_coefficient(
        os.path.join(
            'data', 'semantic evaluation', 'wordsim_relatedness_translate.txt'
        )
    )
    print "Correlation Score obtained: %s\nP-Value obtained: %s" % (
        correlation_score, pvalue
    )
